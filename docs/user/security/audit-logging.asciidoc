[role="xpack"]
[[xpack-security-audit-logging]]
=== Audit logs

You can enable auditing to keep track of security-related events such as
authorization success and failures. Logging these events enables you
to monitor {kib} for suspicious activity and provides evidence in the
event of an attack.

Use the {kib} audit logs in conjunction with {es}'s
audit logging to get a holistic view of all security related events. 
{kib} defers to {es}'s security model for authentication, data
index authorization, and features that are driven by cluster-wide privileges.
For more information on enabling audit logging in {es}, see
{ref}/auditing.html[Auditing security events].

[IMPORTANT]
============================================================================
Audit logs are **disabled** by default. To enable this functionality, you
must set `xpack.security.audit.enabled` to `true` in `kibana.yml`.
============================================================================

Audit logging uses the standard {kib} logging output, which can be configured
in the `kibana.yml` and is discussed in <<settings>>.

==== Audit event types

When you are auditing security events, each request can generate 
multiple audit events. The following is a list of the events that can be generated:

|======
| `saved_objects_authorization_success`    | Logged when a user is authorized to access a saved
                                             objects when using a role with <<kibana-privileges>>
| `saved_objects_authorization_failure`    | Logged when a user isn't authorized to access a saved
                                             objects when using a role with <<kibana-privileges>>
|======


==== ECS audit events (beta)

Below is a list of events that can be logged for auditing purposes. 

Each event is broken down into `category`, `type`, `action` and `outcome` fields to make it easy to filter, query and aggregate the resulting logs. 

[IMPORTANT]
============================================================================
ECS audit events are only logged if the new audit logger (beta) is enabled as shown in <<audit-logging-settings>>.
============================================================================

[NOTE]
============================================================================
Asynchronous actions that are destructive (e.g. write operations) are logged after any authorisation checks have passed but before the response is received to ensure that a record of the operation is persisted even in case of Kibana crashing unexpectedly. Please consult the Elasticsearch audit log to find the outcome of such actions.
============================================================================

[cols="5*<",options="header"]
|======
| Category
| Type
| Action
| Outcome
| Description

| `authentication`
| 
| `user_login`
| `success`
| User logged in successfully

| `authentication`
| 
| `user_login`
| `failure`
| Failed login attemp (e.g. due to invalid credentials)

| `database`
| `creation`
| `saved_object_create`
| `unknown`
| User is creating a saved object

| `database`
| `creation`
| `saved_object_create`
| `failure`
| User is not authorised to create a saved object

| `database`
| `change`
| `saved_object_update`
| `unknown`
| User is updating a saved object

| `database`
| `change`
| `saved_object_update`
| `failure`
| User is not authorised to update a saved object

| `database`
| `change`
| `saved_object_add_to_spaces`
| `unknown`
| User is adding a saved object to other spaces

| `database`
| `change`
| `saved_object_add_to_spaces`
| `failure`
| User is not authorised to add a saved object to other spaces

| `database`
| `change`
| `saved_object_delete_from_spaces`
| `unknown`
| User is removing a saved object from other spaces

| `database`
| `change`
| `saved_object_delete_from_spaces`
| `failure`
| User is not authorised to remove a saved object from other spaces

| `database`
| `deletion`
| `saved_object_delete`
| `unknown`
| User is deleting a saved object

| `database`
| `deletion`
| `saved_object_delete`
| `failure`
| User is not authorised to delete a saved object

| `database`
| `access`
| `saved_object_get`
| `success`
| User has accessed a saved object

| `database`
| `access`
| `saved_object_get`
| `failure`
| User is not authorised to access a saved object

| `database`
| `access`
| `saved_object_find`
| `success`
| User has accessed a saved object as part of a search operation

| `database`
| `access`
| `saved_object_find`
| `failure`
| User is not authorised to search for saved objects

| `web`
| 
| `http_request`
| `unknown`
| User is making HTTP request
|======
